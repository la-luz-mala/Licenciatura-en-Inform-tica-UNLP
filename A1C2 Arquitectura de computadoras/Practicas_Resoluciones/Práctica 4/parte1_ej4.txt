El procesador MIPS64 posee 32 registros, de 64 bits cada uno, llamados r0 a r31 (también conocidos como $0 a $31).
Sin embargo, al programar resulta más conveniente darles nombres más significativos a esos registros.
La siguiente tabla muestra la convención empleada para nombrar a los 32 registros mencionados:

Registros + Nombres > ¿Para que se los utiliza? > ¿Preservado?
r0 $zero > Se los usa para operar con 0 > No preservado
r1 $at > Reservado para el ensamblador > No preservado
r2-r3 $v0-$v1 > Variables de retorno de la subrutina
r4-r7 $a0-$a3 > Argumentos que se le pasan a la subrutina
r8-r15 $t0-$t7 > Registros temporarios, no salvados en las subrutinas
r16-r23 $s0-$s7 > Registros temporarios que deben ser preservados en las subrutinas
r24-r25 $t8-$t9 > Registros temporarios, no salvados en las subrutinas
r26-r27 $k0-$k1 > Para uso del kernel del sistema operativo
r28 $gp > Global pointer
r29 $sp > Stack pointer - Puntero de la pila
r30 $fp > Frame pointer
r31 $ra > Return address - dirección de regreso de la subrutina

Complete la tabla anterior explicando el uso que normalmente se le da a cada uno de los registros nombrados.
Marque en la columna “¿Preservado?” si el valor de cada grupo de registros debe ser preservado luego de realizada
una llamada a una subrutina. Puede encontrar información útil en el apunte “Programando sobre MIPS64”.