;2) Estad√≠sticas de notas‚≠ê‚≠ê‚≠ê
;Escribir un programa que permite calcular estad√≠sticas de las notas de los ex√°menes de una materia. Las
;notas son valores entre 0 y 9, donde 4 es el valor m√≠nimo para aprobar. El programa debe leer de teclado las
;notas y almacenarlas en un vector, convertidas a n√∫meros; la lectura termina con el car√°cter ‚Äú.‚Äù. Luego, el
;programa debe informar el promedio de las notas y almacenar en memoria el porcentaje de ex√°menes
;aprobados.
;Para desarrollar el programa, implementar las subrutinas:
;‚óè üìÑ CANT_APROBADOS: Recibe un vector de n√∫meros y su longitud, y retorna la cantidad de
;n√∫meros iguales o mayores a 4.
;‚óè üìÑ DIV: calcula el resultado de la divisi√≥n entre 2 n√∫meros positivos A y B de 16 bits. Pasaje de
;par√°metros por valor y por registro. Retorna el cociente y el resto en dos registros respectivamente.
;‚óè üìÑMUL: calcula el resultado de la multiplicaci√≥n entre 2 n√∫meros positivos A y B de 16 bits. Pasaje
;de par√°metros por valor y por registro. Retorna el resultado en un registro.
;‚óè üìÑPORCENTAJE: Recibe la cantidad de notas aprobadas, y la cantidad total de notas, y retorna el
;porcentaje de aprobadas.
;Pista: Como VonSim no tiene soporte para n√∫meros en punto flotante, el porcentaje debe calcularse
;con enteros utilizando las subrutinas DIV y MUL. Es decir, si se leen 3 notas y 2 son aprobadas, el
;porcentaje de aprobados ser√≠a 66%, o sea (2 * 100)/3. Como son n√∫meros enteros, es importante
;primero hacer la multiplicaci√≥n y luego la divisi√≥n (¬øpor qu√©?).

ORG 1000H
    MSJ DB "Ingrese las notas: "
    CANTALUMNOS DW 0
    NOTAMIN DB "4"
    APROB DW 0
    PORCENTAJE DW 0
    NOTAS DB ?

ORG 3000H
CANT_APROBADOS:
    MOV DX, 0
    LAZO: MOV AH, BYTE PTR [BX]
    CMP AH, 2EH
    JZ FIN_CANT
    INC BX
    CMP AH, AL
    JS LAZO
    INC DX
    JMP LAZO
FIN_CANT: RET

;‚óè üìÑ DIV: calcula el resultado de la divisi√≥n entre 2 n√∫meros positivos A y B de 16 bits. Pasaje de
;par√°metros por valor y por registro. Retorna el cociente y el resto en dos registros respectivamente.
DIV:
    MOV BX, 0 ; Reseteo el contador auxiliar
    LAZO_DIV: SUB CX, DX ; resto AX (divisor) de DX (dividendo)
    JS FIN_DIV ; si da menos de 0, se acab√≥ la divisi√≥n
    INC BX ; sino aumento la cantidad de veces que divid√≠
    JMP LAZO_DIV ; y vuelvo a dividir
FIN_DIV: RET
;‚óè üìÑMUL: calcula el resultado de la multiplicaci√≥n entre 2 n√∫meros positivos A y B de 16 bits. Pasaje
;de par√°metros por valor y por registro. Retorna el resultado en un registro.
MUL:
    MOV CX, 0
    LAZO_MUL: ADD CX, AX
    DEC BX
    JNZ LAZO_MUL
RET

;‚óè üìÑPORCENTAJE: Recibe la cantidad de notas aprobadas, y la cantidad total de notas, y retorna el
;porcentaje de aprobadas.
PORC:
    MOV AX, 100
    CALL MUL
    CALL DIV
RET

ORG 2000H
    MOV BX, OFFSET MSJ
    MOV AL, OFFSET CANTALUMNOS - OFFSET MSJ
    INT 7
;Ingresar alumnos, contarlos y contar aprobados
MOV BX, OFFSET NOTAS
LOOP: INT 6
MOV AL, BYTE PTR [BX]
CMP AL, 2EH
JZ SALIR
INC CANTALUMNOS
INC BX
JMP LOOP
SALIR: 
;Sacar cuantos aprobaron
MOV BX, OFFSET NOTAS
MOV AL, NOTAMIN
CALL CANT_APROBADOS
MOV APROB, DX

MOV DX, CANTALUMNOS
MOV BX, APROB
CALL PORC
MOV PORCENTAJE, BX

HLT
END